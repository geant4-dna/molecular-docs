I"Å<!-- Need to import MathJax for this post -->
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>

<script id="MathJax-script" async="" src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<!-- END MathJax Import -->

<h1 class="no_toc" id="damage-model">Damage Model</h1>

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#direct-damage" id="markdown-toc-direct-damage">Direct Damage</a></li>
  <li><a href="#indirect-damage" id="markdown-toc-indirect-damage">Indirect Damage</a></li>
  <li><a href="#radical-scavenging" id="markdown-toc-radical-scavenging">Radical Scavenging</a></li>
</ol>

<h2 id="direct-damage">Direct Damage</h2>

<p>Direct Damage occurs when energy from physical processes is deposited near a DNA molecule.
In Molecular DNA, we associate damage either with a ‚Äòstrand‚Äô molecule (sugar or phosphate placement) 
or a base molecule.</p>

<p>The maximum distance from the centre of a molecule which can result in any energy deposition tied to that model
is called the direct interaction range and can be set using <code class="language-plaintext highlighter-rouge">dnageom/interactionDirectRange</code>.</p>

<p>To assign damage, the program looks up all molecules with the direct interation range of a given energy deposition
and assigns the damage to the closest molecule.</p>

<p class="text-center"><img src="/molecular-docs/assets/images/dna-damage.png" alt="Direct Damage is assigned to the closest molecule within a set radius" /></p>

<p>In the literature direct strand break damage models typically take the sum of the energy depositions in the sugar-phosphate
part of the DNA strand and calculate the chance of a break based on the energy deposition.
We simulate this using the <code class="language-plaintext highlighter-rouge">/dnadamage/directDamageLower</code> and <code class="language-plaintext highlighter-rouge">/dnadamage/directDamageUpper</code> commands.
Essentially:</p>

<ul>
  <li>Energy Deposition below directDamageLower never causes a break</li>
  <li>Energy Deposition above directDamageUpper always causes a break</li>
  <li>Between these bounds, the likelihood of a break rises uniformly</li>
</ul>

<p>The likelihood of a break, for a lower bound of 5eV and an upper bound of 37.5eV is shown below</p>

<p class="text-center"><img src="/molecular-docs/assets/images/break-chance.png" alt="Linearly increasing damage likelihood for physical damage" width="300px" /></p>

<p>Some models assume a step likelihood function for physical damage. This can be modelled by setting <code class="language-plaintext highlighter-rouge">/dnadamage/directDamageLower</code> and <code class="language-plaintext highlighter-rouge">/dnadamage/directDamageUpper</code> to the same value.</p>

<h2 id="indirect-damage">Indirect Damage</h2>

<p>Indirect Damage is scored when a chemical reaction leads to a strand break.
The chemical reactions between radicals and DNA elements themselves are defined in the
<a href="/molecular-docs/docs/overview/chemistry-model">Chemistry Model</a> through the <code class="language-plaintext highlighter-rouge">MolecularChemistryList</code> class.</p>

<p>The phosphate part of the sugar-phosphate backbone rarely takes part in reactions
(reactions between radicals and phosphate are not even defined in the simulation),
so the main factors in the indirect damage model are the likelihoods that a reaction
between a radical and the DNA backbone lead to a single strand break (SSB).</p>

<p>Each probablity is defined through the macro interface as below</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Reaction</th>
      <th style="text-align: left">Macro Command</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">\(Pr(\ce{e^{-}_{aq}} + \mathrm{Sugar} \rightarrow \mathrm{SSB})\)</td>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">/dnadamage/indirectEaqStrandChance</code></td>
    </tr>
    <tr>
      <td style="text-align: left">\(Pr(H^{\bullet} + \mathrm{Sugar} \rightarrow \mathrm{SSB})\)</td>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">/dnadamage/indirectHStrandChance</code></td>
    </tr>
    <tr>
      <td style="text-align: left">\(Pr(\ce{^{\bullet}OH} + \mathrm{Sugar} \rightarrow \mathrm{SSB})\)</td>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">/dnadamage/indirectOHStrandChance</code></td>
    </tr>
  </tbody>
</table>

<p>Base Damage is modelled through a similar interface, though two steps are provided for the modelling of both
base damage generally, and also strand break induction (while this might seem redundant, it was coded for a level of flexibility).</p>

<p>For a given base, we can consider seperately the likelihood that
the chemical reaction between the base and the radical
causes damage to the base pair, and the likelihood it causes a strand break.
In the case of \(\ce{^{\bullet}OH}\) <code class="language-plaintext highlighter-rouge">/dnadamage/indirectOHBaseChance 0.5</code> would
set the likelihood that the simulation should consider a reaction between
\(\ce{^{\bullet}OH}\) and a base as damage as 50%. If base damage does occur,
<code class="language-plaintext highlighter-rouge">/dnadamage/inductionOHChance 0.4</code> would mean that following base damage, the chance
of that damage causing an SSB is 40%. <em>Note that these are dependent events, so the likelihood</em>
<em>of the reaction causing an SSB is 20%</em>.</p>

<p>For most work, you would probably consider all chemical reactions with a base as base damage,
but assume these don‚Äôt lead to SSBs. This requires the following settings for all radicals:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/dnadamage/indirectOHBaseChance 1.0
/dnadamage/inductionOHChance 0.00
</code></pre></div></div>

<h2 id="radical-scavenging">Radical Scavenging</h2>

<p>One of the most important parameters in the simulation is <code class="language-plaintext highlighter-rouge">/dnageom/radicalKillDistance</code>
which specifies the spatial region in which we calculate chemistry.
This parameter is complimentary with what other simulations would model as scavenging or
an early simulation cut-off time, in that it is linked to the distance a radical is expected
to diffuse before the simulation ends.</p>

<p>In particular, for a radical with a diffusion constant \(D_c\), we expect it to diffuse a
distance \(\bar{x}\) in time \(t\) as follows:</p>

\[\bar{x} = \sqrt{6D_ct}\]

<p>For the \(\ce{^{\bullet}OH}\) radical (\(D_c=2.8\times 10^{-9}m^2s^{-1}\)), this
gives \(\bar{x} = 4.09 \sqrt{t} \ \mathrm{nm}\). Typically for simulations in Molecular DNA,
this means that a radical kill distance of 4nm-6nm yields reliable results, while larger radical kill
distances would require scavenging to be more broadly implemented.</p>

:ET