{"0": {
    "doc": "Chemistry Model",
    "title": "Chemistry Model",
    "content": "# Configuration {: .no_toc } Just the Docs has some specific configuration parameters that can be defined in your Jekyll site's _config.yml file. {: .fs-6 .fw-300 } ",
    "url": "https://natl.github.io/molecular-docs/docs/overview/chemistry-model.html",
    "relUrl": "/docs/overview/chemistry-model.html"
  },"1": {
    "doc": "Configuration Glossary",
    "title": "Configuration Glossary",
    "content": "# Configuration {: .no_toc } Just the Docs has some specific configuration parameters that can be defined in your Jekyll site's _config.yml file. {: .fs-6 .fw-300 } ",
    "url": "https://natl.github.io/molecular-docs/docs/overview/configuration",
    "relUrl": "/docs/overview/configuration"
  },"2": {
    "doc": "Damage Model",
    "title": "Damage Model",
    "content": "# Configuration {: .no_toc } Just the Docs has some specific configuration parameters that can be defined in your Jekyll site's _config.yml file. {: .fs-6 .fw-300 } ",
    "url": "https://natl.github.io/molecular-docs/docs/overview/damage-model.html",
    "relUrl": "/docs/overview/damage-model.html"
  },"3": {
    "doc": "Geometry Library",
    "title": "Geometry Library",
    "content": " ",
    "url": "https://natl.github.io/molecular-docs/docs/geometry-library",
    "relUrl": "/docs/geometry-library"
  },"4": {
    "doc": "Geometry Model",
    "title": "Geometry Model",
    "content": "# Geometry Model {: .no_toc } ## {: .no_toc .text-delta } 1. TOC {:toc} ## Design Principal Molecular-DNA was made to make it easy to define a DNA geometry, and then place it repeatedly to model a complex geometry at large scales, as below. ![Placements for DNA Geometries](/assets/images/placements-export.svg) {: .text-center} There are two important notions when we define the geometry, *placement definitions* and the *geometry defintion*, often called the *fractal definition* as it is often seeded with a fractal. - *Placement Definition* defines the small scale structure of the simulation. - *Geometry Definition* defines the large scale structure of the simulation. Some examples of how to make these files are available on [github](https://github.com/natl/fractaldna), and examples can be downloaded from the [Geometry Library]({{site.url}}/docs/geometry-library) ## DNA Placements DNA Placements are the low level building block of the DNA geometry and show how the DNA sits in a given segment of DNA. ### Specifying Molecule Sizes ### Defining DNA Placements The molecular structure files must follow a pattern for specifying base pairs. The units of this file are **angstroms** They are loaded and named via `/dnageom/placementVolume turntwist geometries/turned_twisted_solenoid_750.txt true` or more generally, `/dnageom/placementVolume name path twist` Where twist is true only if the DNA leaves the region it is placed in twisted. First, we specify the columns as follows: ``` NAME SHAPE CHAIN_ID STRAND_ID BP_INDEX SIZE_X SIZE_Y SIZE_Z POS_X POS_Y POS_Z ROT_X ROT_Y ROT_Z ``` The base pair molecules should be ordered in the following way: ``` NAME ... CHAIN_ID STRAND_ID BP_INDEX Phosphate 0 0 0 Sugar 0 0 0 Base 0 0 0 Phosphate 0 1 0 Sugar 0 1 0 Base 0 1 0 Phosphate 0 0 1 Sugar 0 0 1 Base 0 0 1 Phosphate 0 1 1 Sugar 0 1 1 Base 0 1 1 Phosphate 0 0 2 Sugar 0 0 2 Base 0 0 2 Phosphate 0 1 2 Sugar 0 1 2 Base 0 1 2 Phosphate 1 0 1 Sugar 1 0 1 Base 1 0 1 ``` For example: ``` # NAME SHAPE CHAIN_ID STRAND_ID BP_INDEX SIZE_X SIZE_Y SIZE_Z POS_X POS_Y POS_Z ROT_X ROT_Y ROT_Z Phosphate sphere 0 0 0 2.28235386685 2.28235386685 2.28235386685 -0.779890171626 8.81558497913 -354.765866667 0.0 -0.0 0.0 Sugar sphere 0 0 0 2.6321398256 2.6321398256 2.6321398256 2.25982239097 6.73743447392 -355.665858586 0.0 -0.0 0.0 Adenine ellipse 0 0 0 3.43071072475 3.74350414063 1.93195792885 -0.361457926445 3.55954727504 -356.525238095 0.0 -0.0 0.0 Phosphate sphere 0 1 0 2.28235386685 2.28235386685 2.28235386685 -0.779890171626 -8.81558497913 -359.034133333 0.0 -0.0 0.0 Sugar sphere 0 1 0 2.6321398256 2.6321398256 2.6321398256 2.25982239097 -6.73743447392 -358.134141414 0.0 -0.0 0.0 Thymine ellipse 0 1 0 4.20594307927 3.04044782148 2.00335871121 0.341921252673 -2.52650922939 -357.1434375 0.0 -0.0 0.0 Phosphate sphere 0 0 1 2.28235386685 2.28235386685 2.28235386685 -5.61207771304 6.84305128922 -351.445866667 0.0 -0.0 0.598647933434 Sugar sphere 0 0 1 2.6321398256 2.6321398256 2.6321398256 -1.92988440602 6.83925191147 -352.345858586 0.0 -0.0 0.598647933434 Cytosine ellipse 0 0 1 3.59734130793 3.06633133132 1.77936085548 -1.85431408781 2.78220301495 -353.241181102 0.0 -0.0 0.598647933434 Phosphate sphere 0 1 1 2.28235386685 2.28235386685 2.28235386685 4.32354583169 -7.72202814327 -355.714133333 0.0 -0.0 0.598647933434 Sugar sphere 0 1 1 2.6321398256 2.6321398256 2.6321398256 5.66355525211 -4.2923143449 -354.814141414 0.0 -0.0 0.598647933434 Guanine ellipse 0 1 1 3.63150302541 3.79995327655 1.88728803748 1.8106255578 -1.57510975134 -353.791781609 0.0 -0.0 0.598647933434 Phosphate sphere 0 0 2 2.28235386685 2.28235386685 2.28235386685 -8.49236548301 2.49048101922 -348.125866667 0.0 -0.0 1.19729586687 Sugar sphere 0 0 2 2.6321398256 2.6321398256 2.6321398256 -5.44837082374 4.56235420546 -349.025858586 0.0 -0.0 1.19729586687 Guanine ellipse 0 0 2 3.63150302541 3.79995327655 1.88728803748 -1.93957822803 1.41328409623 -350.048218391 0.0 -0.0 1.19729586687 ``` The order Phosphate - Sugar - Base must always be kept. Each chain is specified completely before a new chain starts, and base pair sections are specified in their entirety before a new base pair section is specified. This is done to enable the file to be read in such that their is a fixed distance between any molecule and its neighbours. This facilitates the cutting of certain shapes within Geant4 so that each shape can be represented with the maximum volume possible. The relevant spaces needed in finding neighbouring molecules are for a molecule at position P: * Base Pair, strand ID 0: Sugar at P-1, base at P+3, base at P-6 * Base Pair, strand ID 1: Sugar at P-1, base at P-3, base at P-6 * Sugar: Phosphate at P-1 * Phosphate: Sugar at P+5 ### Considerations for Base Pairs The fundamental base pair geometry that is used should be aligned (where possible) with the DNA helix aligned with the Z axis. Base pairs are hard-coded to have a maximum half-height of 0.17 nm in the case where the vertical semi-axis is larger than this. Additionally, if the base pairs were to overlap, they are rescaled to eliminate any chance of this. Whilst this reduces the volume in the simulation that can be considered as containing \"base pairs\", it only marginally affects the simulation. ## Geometry Placements DNA motif files are placed according to whatever specified in the input definition file. This file looks as follows ``` #IDX KIND POS_X POS_Y POS_Z EUL_PSI EUL_THETA EUL_PHI 0 straight 0.0 0.0 0.0 0.0 -0.0 0.0 1 turn 0.0 0.0 1.0 0.0 -0.0 1.57079632679 2 turn 0.0 1.0 1.0 -1.57079632679 1.57079632679 0 3 turntwist -0.0 1.0 0.0 3.14159265359 -0.0 0.0 4 turn 1.0 1.0 -0.0 -3.14159265359 -1.57079632679 0 5 turntwist 1.0 1.0 1.0 0.0 -0.0 -1.57079632679 6 turn 1.0 0.0 1.0 1.57079632679 1.57079632679 0 7 straight 1.0 0.0 -0.0 3.14159265359 -0.0 0.0 ``` Here, three motif files are placed at the positions indicated, and rotated as indicated. X, Y and Z positions can be given scalings or units with the command `/dnageom/fractalScaling 1 1 1 nm # file is in nm` `/dnageom/fractalScaling 50 50 50 nm # scale each unit to 50 nm blocks` Files are loaded via: `/dnageom/definitionFile geometries/cube-centred-X-7.txt # or another path` Motif files are named when they are loaded via macro commands. ## Physics and Chemistry Considerations ",
    "url": "https://natl.github.io/molecular-docs/docs/geometry-model",
    "relUrl": "/docs/geometry-model"
  },"5": {
    "doc": "Home",
    "title": "Home",
    "content": "# Molecular DNA {: .fs-9 } Radiation-induced DNA damage simulations in Geant4. {: .fs-6 .fw-300 } Molecular-DNA is a Geant4-DNA program built to allow easy simulation of radiation-induced DNA damage with *flexible geometries* and well defined *damage parameters*. Get started right away using our *docker container* and a *library of pre-existing geometries*, or dive into the documentation. [Get Started from Source]({{site.url}}/docs/source.html){: .btn .btn-purple } [See Publications]({{site.url}}/docs/publications.html){: .btn .btn-blue } [Explore Geometries]({{site.url}}/docs/geometries.html){: .btn .btn-green } Want to know more about how it all works? You'll want to visit our [Overview]({{site.url}}/docs/overview) page. ",
    "url": "https://natl.github.io/molecular-docs/",
    "relUrl": "/"
  },"6": {
    "doc": "Molecular-DNA Macro Files",
    "title": "Molecular-DNA Macro Files",
    "content": "# Molecular-DNA Macro Files {: .no_toc } Macro files define simulations in Geant4. Molecular-DNA contains a number of additional commands that allow DNA simulations to take place. The full list of commands is written in [Configuration]({{site.url}}/docs/overview/configuration). ## {: .no_toc .text-delta } 1. TOC {:toc} ## A Basic Macro File Let's start with a basic macro file: ``` # First off, we set the size of the world /world/worldSize 3 um # Next we define the geometry /dnageom/placementSize 50 50 50 nm /dnageom/placementVolume turn geometries/1strand_50nm_turn.txt /dnageom/placementVolume turntwist geometries/1strand_50nm_turn.txt true /dnageom/placementVolume straight geometries/1strand_50nm_straight.txt /dnageom/fractalScaling 50 50 50 nm /dnageom/definitionFile geometries/hilbert1.txt # We define our \"chromosomes\" /chromosome/add cell sphere 200 0 0 0 nm # Geometry related damage parameters /dnageom/radicalKillDistance 4 nm /dnageom/interactionDirectRange 6 angstrom # We define the damage model /dnadamage/directDamageLower 17.5 eV /dnadamage/directDamageUpper 17.5 eV /dnadamage/indirectOHBaseChance 1.0 /dnadamage/indirectOHStrandChance 0.4 /dnadamage/inductionOHChance 0.00 /dnadamage/indirectHBaseChance 1.0 /dnadamage/indirectHStrandChance 0.4 /dnadamage/inductionHChance 0.00 /dnadamage/indirectEaqBaseChance 1.0 /dnadamage/indirectEaqStrandChance 0.4 /dnadamage/inductionEaqChance 0.00 # And then we initialize our run /run/initialize # The General Particle Source is used to define a beam /gps/particle proton /gps/ang/type iso /gps/energy 100 keV /gps/pos/type Point /gps/pos/centre 51 51 51 nm # Set any analysis parameters /analysisDNA/fileName my_file.root # And the simulation can run! /run/beamOn 1 ``` That's a lot to digest. But we can break down the macro file into a few components: 1. Set up the world 1. Define the geometry 1. Define the regions of interest (chromosomes) 1. Define the damage model 1. Set up the beam 1. Set any analysis rules 1. Run the simulation! ## Set up the world The first command to run is to set the size of the world. The simulation runs in a square world and you can set the side length as below: ``` /world/worldSize 3 um ``` The world is entirely made of water unless you also specify a cell (by its semi-major axes). ``` /cell/radiusSize 1 1 0.5 um ``` Cells modify the default behavoiur by placing a water containing cell into a vacuum-filled world. ![World with and without /cell command](/assets/images/world.svg) {: .text-center} ## Set Up the Geometry There are two important notions when we define the geometry, *placement definitions* and the *geometry defintion*, often called the *fractal definition* as it is often seeded with a fractal. - *Placement Definition* defines the small scale structure of the simulation. - *Geometry Definition* defines the large scale structure of the simulation. This is illustrated below, where turned and straight segments are used to build a horse-shoe shape: ![Placements for DNA Geometries](/assets/images/placements-export.svg) {: .text-center} So how does all this work? Let's break down the definitions above: The first things we define are the sizes of our placement volumes. Here we use 50 nm side length cubes, but these can be rectangular prisms of any shape. ``` /dnageom/placementSize 50 50 50 nm ``` In this example there are three placement definitions for a straight section, a turned section, and a turned with a 90˚ twist section. ``` /dnageom/placementVolume turn geometries/1strand_50nm_turn.txt /dnageom/placementVolume turntwist geometries/1strand_50nm_turn.txt true /dnageom/placementVolume straight geometries/1strand_50nm_straight.txt ``` These are referenced by the their names turn, straight and turntwist in the geometry definition file which is loaded as follows: ``` /dnageom/definitionFile geometries/hilbert1.txt ``` This particular file handles the space in integer units, so that we can scale them using the command, which allows the definition file to be scaled to the size of the placement volumes we use in this example. ``` /dnageom/fractalScaling 50 50 50 nm ``` ## Define the Chromosomes In Molecular-DNA, you can think of chromosomes as *regions of interest* for analysis. Currently, cylindrical, spherical and elliptical chromosome shapes can be defined, which are mapped onto the placement volumes defined by the large scale geometry. The below image shows, for example how two chromosomes can be defined to yield two regions of interest, overlaid on the grid which defines the overall geometry. ![Two chromosomes in 2-D](/assets/images/chromosomes.svg){: width=\"300px\"} {: .text-center} Importantly, the DNA geometry is only placed inside chromosomes. Using this, a square geometry can be coerced to a circular form, by placing a spherical chromosome as we do here: ``` /chromosome/add cell sphere 200 0 0 0 nm ``` ## Set up the Damage Model A number of parameters are used to determine how DNA damage works in the simulation. The first of these determine how the geometry in particular influences the simulation. ``` /dnageom/radicalKillDistance 4 nm /dnageom/interactionDirectRange 6 angstrom ``` The *Radical Kill Distance* tells the simulation to kill all chemistry tracks further than 4nm from the DNA. This parameter is an implicit bound on scavenging. It basically assumes all chemical radicals that need to diffuse 4nm to react with the DNA will be scavenged before they are able to interact chemically with the DNA molecule. The *Direct Interaction Range* describes to what radius direct (physics-driven) energy depositions should be ascribed to a DNA molecule. Here, only energy depositions with 6Å can contribute a direct strand break. The next part of the damage model handles how direct strand breaks are calculated. The below snippet defines a step function where a cumulative deposition of 17.5eV or more in one event will cause a break. ``` /dnadamage/directDamageLower 17.5 eV /dnadamage/directDamageUpper 17.5 eV ``` The lower and upper values here describe a broken linear function where: * Energy Deposition below directDamageLower never causes a break * Energy Deposition above directDamageUpper always causes a break * Between these bounds, the likelihood of a break rises uniformly An example of this, for a lower bound of 5eV and an upper bound of 37.5eV is shown below ![Linearly increasing damage likelihood for physical damage](/assets/images/break-chance.png){: width=\"300px\"} {: .text-center} Next, we define the likelihood of chemical damage occurring for different reactions as below: ``` /dnadamage/indirectOHBaseChance 1.0 /dnadamage/indirectOHStrandChance 0.4 /dnadamage/inductionOHChance 0.00 ``` Indirect damage here is what is typically discussed in most papers, it is the likelihood of a chemical reaction occurring between either OH (in this case) and either a base or strand molecule. A lot of research only considers reactions between radicals and strands as leading to strand breaks, and this simulation considers that all reactions between a strand and a radical cause a break. On the other hand, it's rarely considered that an interaction between a radical and a base can lead to a strand break. If, for whatever reason, you want to model this, you can use the induction chance. This is the probability that base damage leads to a strand break. For most simulations, all that is important are the Radical+Strand break chances, which are set by: ``` /dnadamage/indirectOHStrandChance 0.4 /dnadamage/indirectHStrandChance 0.4 /dnadamage/indirectEaqStrandChance 0.4 ``` for the •OH, H+ and eaq radicals respectively. ## Set up the beam The simulation allows the Geant4 General Particle Source be used to define the beam. You can read the documentation [here](https://geant4-userdoc.web.cern.ch/UsersGuides/ForApplicationDeveloper/html/GettingStarted/generalParticleSource.html). The source here defines a 100keV proton point source emitting isotropically. ``` # The General Particle Source is used to define a beam /gps/particle proton /gps/ang/type iso /gps/energy 100 keV /gps/pos/type Point /gps/pos/centre 51 51 51 nm ``` ## Set up analysis rules The commands under analysisDNA allow the analysis to be modified. Notably, you'll want to set the output file name: ``` /analysisDNA/fileName my_file.root ``` ## Run the simulation Particles can be fired using the `/run/beamOn` command. If you haven't already run `/run/initialize`, the initialisation process will also occur here. Be advised that this can take many hours to build a complex DNA geometry due to how the simulation has been designed and the current constraints of Geant4 as it optimises navigation. It is advised that a test on a small geometry is run before moving to a human cell-sized geometry. ",
    "url": "https://natl.github.io/molecular-docs/docs/overview/macro-anatomy",
    "relUrl": "/docs/overview/macro-anatomy"
  },"7": {
    "doc": "Overview",
    "title": "Overview",
    "content": "# Molecular DNA Overview {: .no_toc } The Molecular-DNA program is designed to allow anyone to simulate early DNA damage using only Geant4 macro commands - No C++ skills needed. The program takes inputs through the form of macro commands which define the geometry, damage model, physics, chemistry and run conditions for the simulation. If you are entirely new to this, the best place to start is looking at the [Anatomy of a Macro File]({{site.url}}/docs/overview/macro-anatomy). ## {: .no_toc .text-delta } ",
    "url": "https://natl.github.io/molecular-docs/docs/overview",
    "relUrl": "/docs/overview"
  },"8": {
    "doc": "Physics Model",
    "title": "Physics Model",
    "content": "# Configuration {: .no_toc } Just the Docs has some specific configuration parameters that can be defined in your Jekyll site's _config.yml file. {: .fs-6 .fw-300 } ",
    "url": "https://natl.github.io/molecular-docs/docs/overview/physics-model.html",
    "relUrl": "/docs/overview/physics-model.html"
  },"9": {
    "doc": "Publications",
    "title": "Publications",
    "content": "# Publications ",
    "url": "https://natl.github.io/molecular-docs/docs/publications.html",
    "relUrl": "/docs/publications.html"
  },"10": {
    "doc": "Running from Source",
    "title": "Running from Source",
    "content": "# Running from source {: .no_toc } ",
    "url": "https://natl.github.io/molecular-docs/docs/source.html",
    "relUrl": "/docs/source.html"
  }
}
