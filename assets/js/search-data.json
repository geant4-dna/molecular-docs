{"0": {
    "doc": "About",
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at [jekyllrb.com](https://jekyllrb.com/) You can find the source code for Minima at GitHub: [jekyll][jekyll-organization] / [minima](https://github.com/jekyll/minima) You can find the source code for Jekyll at GitHub: [jekyll][jekyll-organization] / [jekyll](https://github.com/jekyll/jekyll) [jekyll-organization]: https://github.com/jekyll ",
    "url": "/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "Configuration",
    "title": "Configuration",
    "content": "# Configuration {: .no_toc } Just the Docs has some specific configuration parameters that can be defined in your Jekyll site's _config.yml file. {: .fs-6 .fw-300 } ## {: .no_toc .text-delta } 1. TOC {:toc} --- View this site's [_config.yml](https://github.com/pmarsceill/just-the-docs/tree/master/_config.yml) file as an example. ## Site logo ```yaml # Set a path/url to a logo that will be displayed instead of the title logo: \"/assets/images/just-the-docs.png\" ``` ## Search ```yaml # Enable or disable the site search # Supports true (default) or false search_enabled: true search: # Split pages into sections that can be searched individually # Supports 1 - 6, default: 2 heading_level: 2 # Maximum amount of previews per search result # Default: 3 previews: 3 # Maximum amount of words to display before a matched word in the preview # Default: 5 preview_words_before: 5 # Maximum amount of words to display after a matched word in the preview # Default: 10 preview_words_after: 10 # Set the search token separator # Default: /[\\s\\-/]+/ # Example: enable support for hyphenated search words tokenizer_separator: /[\\s/]+/ # Display the relative url in search results # Supports true (default) or false rel_url: true # Enable or disable the search button that appears in the bottom right corner of every page # Supports true or false (default) button: false ``` ## Aux links ```yaml # Aux links for the upper right navigation aux_links: \"Just the Docs on GitHub\": - \"//github.com/pmarsceill/just-the-docs\" # Makes Aux links open in a new tab. Default is false aux_links_new_tab: false ``` ## Heading anchor links ```yaml # Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false heading_anchors: true ``` ## Footer content ```yaml # Footer content # appears at the bottom of every page's main content # Note: The footer_content option is deprecated and will be removed in a future major release. Please use `_includes/footer_custom.html` for more robust markup / liquid-based content. footer_content: \"Copyright &copy; 2017-2020 Patrick Marsceill. Distributed by an MIT license.\" # Footer last edited timestamp last_edit_timestamp: true # show or hide edit time - page must have `last_modified_date` defined in the frontmatter last_edit_time_format: \"%b %e %Y at %I:%M %p\" # uses ruby's time format: https://ruby-doc.org/stdlib-2.7.0/libdoc/time/rdoc/Time.html # Footer \"Edit this page on GitHub\" link text gh_edit_link: true # show or hide edit this page link gh_edit_link_text: \"Edit this page on GitHub.\" gh_edit_repository: \"https://github.com/pmarsceill/just-the-docs\" # the github URL for your repo gh_edit_branch: \"master\" # the branch that your docs is served from # gh_edit_source: docs # the source that your files originate from gh_edit_view_mode: \"tree\" # \"tree\" or \"edit\" if you want the user to jump into the editor immediately ``` _note: `footer_content` is deprecated, but still supported. For a better experience we have moved this into an include called `_includes/footer_custom.html` which will allow for robust markup / liquid-based content._ - the \"page last modified\" data will only display if a page has a key called `last_modified_date`, formatted in some readable date format - `last_edit_time_format` uses Ruby's DateTime formatter; see examples and more information [at this link.](https://apidock.com/ruby/DateTime/strftime) - `gh_edit_repository` is the URL of the project's GitHub repository - `gh_edit_branch` is the branch that the docs site is served from; defaults to `master` - `gh_edit_source` is the source directory that your project files are stored in (should be the same as [site.source](https://jekyllrb.com/docs/configuration/options/)) - `gh_edit_view_mode` is `\"tree\"` by default, which brings the user to the github page; switch to `\"edit\"` to bring the user directly into editing mode ## Color scheme ```yaml # Color scheme supports \"light\" (default) and \"dark\" color_scheme: dark ``` Preview dark color scheme ## Google Analytics ```yaml # Google Analytics Tracking (optional) # e.g, UA-1234567-89 ga_tracking: UA-5555555-55 ga_tracking_anonymize_ip: true # Use GDPR compliant Google Analytics settings (true by default) ``` ## Document collections By default, the navigation and search include normal [pages](https://jekyllrb.com/docs/pages/). Instead, you can also use [Jekyll collections](https://jekyllrb.com/docs/collections/) which group documents semantically together. For example, put all your documentation files in the `_docs` folder and create the `docs` collection: ```yaml # Define Jekyll collections collections: # Define a collection named \"docs\", its documents reside in the \"_docs\" directory docs: permalink: \"/:collection/:path/\" output: true just_the_docs: # Define which collections are used in just-the-docs collections: # Reference the \"docs\" collection docs: # Give the collection a name name: Documentation # Exclude the collection from the navigation # Supports true or false (default) nav_exclude: false # Exclude the collection from the search # Supports true or false (default) search_exclude: false ``` You can reference multiple collections. This creates categories in the navigation with the configured names. ```yaml collections: docs: permalink: \"/:collection/:path/\" output: true tutorials: permalink: \"/:collection/:path/\" output: true just_the_docs: collections: docs: name: Documentation tutorials: name: Tutorials ``` ",
    "url": "/docs/configuration.html",
    "relUrl": "/docs/configuration.html"
  },"2": {
    "doc": "Home",
    "title": "Home",
    "content": "# Molecular DNA {: .fs-9 } Radiation-induced DNA damage simulations in Geant4. {: .fs-6 .fw-300 } Molecular-DNA is a Geant4-DNA program built to allow easy simulation of radiation-induced DNA damage with *flexible geometries* and well defined *damage parameters*. Get started right away using our *docker container* and a *library of pre-existing geometries*, or dive into the documentation. [Get Started from Source](http://example.com/){: .btn .btn-purple } [Get Started with Docker](http://example.com/){: .btn .btn-blue } [Explore Geometries](http://example.com/){: .btn .btn-green } [Link button](http://example.com/){: .btn } [Link button](http://example.com/){: .btn .btn-outline } ",
    "url": "/",
    "relUrl": "/"
  },"3": {
    "doc": "Running from Source",
    "title": "Running from Source",
    "content": "# Running from source {: .no_toc } Just the Docs has some specific configuration parameters that can be defined in your Jekyll site's _config.yml file. {: .fs-6 .fw-300 } ## {: .no_toc .text-delta } 1. TOC {:toc} --- View this site's [_config.yml](https://github.com/pmarsceill/just-the-docs/tree/master/_config.yml) file as an example. ## Site logo ```yaml # Set a path/url to a logo that will be displayed instead of the title logo: \"/assets/images/just-the-docs.png\" ``` ## Search ```yaml # Enable or disable the site search # Supports true (default) or false search_enabled: true search: # Split pages into sections that can be searched individually # Supports 1 - 6, default: 2 heading_level: 2 # Maximum amount of previews per search result # Default: 3 previews: 3 # Maximum amount of words to display before a matched word in the preview # Default: 5 preview_words_before: 5 # Maximum amount of words to display after a matched word in the preview # Default: 10 preview_words_after: 10 # Set the search token separator # Default: /[\\s\\-/]+/ # Example: enable support for hyphenated search words tokenizer_separator: /[\\s/]+/ # Display the relative url in search results # Supports true (default) or false rel_url: true # Enable or disable the search button that appears in the bottom right corner of every page # Supports true or false (default) button: false ``` ## Aux links ```yaml # Aux links for the upper right navigation aux_links: \"Just the Docs on GitHub\": - \"//github.com/pmarsceill/just-the-docs\" # Makes Aux links open in a new tab. Default is false aux_links_new_tab: false ``` ## Heading anchor links ```yaml # Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false heading_anchors: true ``` ## Footer content ```yaml # Footer content # appears at the bottom of every page's main content # Note: The footer_content option is deprecated and will be removed in a future major release. Please use `_includes/footer_custom.html` for more robust markup / liquid-based content. footer_content: \"Copyright &copy; 2017-2020 Patrick Marsceill. Distributed by an MIT license.\" # Footer last edited timestamp last_edit_timestamp: true # show or hide edit time - page must have `last_modified_date` defined in the frontmatter last_edit_time_format: \"%b %e %Y at %I:%M %p\" # uses ruby's time format: https://ruby-doc.org/stdlib-2.7.0/libdoc/time/rdoc/Time.html # Footer \"Edit this page on GitHub\" link text gh_edit_link: true # show or hide edit this page link gh_edit_link_text: \"Edit this page on GitHub.\" gh_edit_repository: \"https://github.com/pmarsceill/just-the-docs\" # the github URL for your repo gh_edit_branch: \"master\" # the branch that your docs is served from # gh_edit_source: docs # the source that your files originate from gh_edit_view_mode: \"tree\" # \"tree\" or \"edit\" if you want the user to jump into the editor immediately ``` _note: `footer_content` is deprecated, but still supported. For a better experience we have moved this into an include called `_includes/footer_custom.html` which will allow for robust markup / liquid-based content._ - the \"page last modified\" data will only display if a page has a key called `last_modified_date`, formatted in some readable date format - `last_edit_time_format` uses Ruby's DateTime formatter; see examples and more information [at this link.](https://apidock.com/ruby/DateTime/strftime) - `gh_edit_repository` is the URL of the project's GitHub repository - `gh_edit_branch` is the branch that the docs site is served from; defaults to `master` - `gh_edit_source` is the source directory that your project files are stored in (should be the same as [site.source](https://jekyllrb.com/docs/configuration/options/)) - `gh_edit_view_mode` is `\"tree\"` by default, which brings the user to the github page; switch to `\"edit\"` to bring the user directly into editing mode ## Color scheme ```yaml # Color scheme supports \"light\" (default) and \"dark\" color_scheme: dark ``` Preview dark color scheme ## Google Analytics ```yaml # Google Analytics Tracking (optional) # e.g, UA-1234567-89 ga_tracking: UA-5555555-55 ga_tracking_anonymize_ip: true # Use GDPR compliant Google Analytics settings (true by default) ``` ## Document collections By default, the navigation and search include normal [pages](https://jekyllrb.com/docs/pages/). Instead, you can also use [Jekyll collections](https://jekyllrb.com/docs/collections/) which group documents semantically together. For example, put all your documentation files in the `_docs` folder and create the `docs` collection: ```yaml # Define Jekyll collections collections: # Define a collection named \"docs\", its documents reside in the \"_docs\" directory docs: permalink: \"/:collection/:path/\" output: true just_the_docs: # Define which collections are used in just-the-docs collections: # Reference the \"docs\" collection docs: # Give the collection a name name: Documentation # Exclude the collection from the navigation # Supports true or false (default) nav_exclude: false # Exclude the collection from the search # Supports true or false (default) search_exclude: false ``` You can reference multiple collections. This creates categories in the navigation with the configured names. ```yaml collections: docs: permalink: \"/:collection/:path/\" output: true tutorials: permalink: \"/:collection/:path/\" output: true just_the_docs: collections: docs: name: Documentation tutorials: name: Tutorials ``` ",
    "url": "/docs/source.html",
    "relUrl": "/docs/source.html"
  }
}
